package com.pine.lib.net.pic.by;

import android.content.Context;
import android.graphics.Bitmap;
import android.widget.ImageView;

import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.assist.ImageScaleType;
import com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer;
import com.pine.lib.R;
import com.pine.lib.net.pic.SetPicInterface;

/**
 * 如果上下文变化，请重新构建这个类
 */
public class SetPicByUniversal implements SetPicInterface
{
	private int resId = R.drawable.loading_little_image;
	private DisplayImageOptions options;



	public static SetPicByUniversal i(Context context)
	{
		return new SetPicByUniversal();
	}


	private SetPicByUniversal()
	{

	}


	/**
	 * 设置加载中的图标资源图标
	 */
	@Override
	public SetPicInterface setLoadingPic(int resId)
	{

		this.resId = resId;
		return this;
	}


	@Override
	public Boolean setPic(ImageView imageView, String url)
	{
		if (options == null)
		{
			options = new DisplayImageOptions.Builder()
					.showImageOnLoading(resId) // 设置图片在下载期间显示的图片
					// .showImageForEmptyUri(R.drawable.ic_empty)//
					// 设置图片Uri为空或是错误的时候显示的图片
					// .showImageOnFail(R.drawable.ic_error) //
					// 设置图片加载/解码过程中错误时候显示的图片
					.cacheInMemory(true)// 设置下载的图片是否缓存在内存中
					.cacheOnDisc(true)// 设置下载的图片是否缓存在SD卡中
					.considerExifParams(true) // 是否考虑JPEG图像EXIF参数（旋转，翻转）
					.imageScaleType(ImageScaleType.EXACTLY)// 设置图片以如何的编码方式显示
					.bitmapConfig(Bitmap.Config.RGB_565)// 设置图片的解码类型//
					// .decodingOptions(BitmapFactory.Options
					// decodingOptions)//设置图片的解码配置
					// .delayBeforeLoading(int delayInMillis)//int
					// delayInMillis为你设置的下载前的延迟时间
					// 设置图片加入缓存前，对bitmap进行设置
					// .preProcessor(BitmapProcessor preProcessor)
					.resetViewBeforeLoading(true)// 设置图片在下载前是否重置，复位
					// .displayer(new RoundedBitmapDisplayer(200))//
					// 是否设置为圆角，弧度为多少 2选1
					.displayer(new FadeInBitmapDisplayer(1000))// 是否图片加载好后渐入的动画时间
					.build();// 构建完成
		}

		if ((imageView != null) && (url != null) && (!url.equals("")))
		{
			ImageLoader.getInstance().displayImage(url, imageView, options);
			return true;
		}
		else
		{
			return false;
		}
	}


	@Override
	public Boolean setPic(ImageView imageView, int srcId)
	{
		if ((imageView != null))
		{
			imageView.setImageResource(srcId);
			imageView.setTag("null");
			return true;
		}
		else
		{
			return false;
		}
	}

}
